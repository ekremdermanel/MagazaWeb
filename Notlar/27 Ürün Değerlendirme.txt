Models - Degerlendirme.cs

public class Degerlendirme
{
    public int Id { get; set; }
    public string Yorum { get; set; }
    public int Puan { get; set; }
    public DateTime EklenmeTarihi { get; set; }
    public bool Onay { get; set; }
    public int UrunId { get; set; }
    public Urun Urun { get; set; }
    public string KullaniciId { get; set; }
    public Kullanici Kullanici { get; set; }
}


Models - Kullanici.cs ye ekle

public List<Degerlendirme> Degerlendirmeler { get; set; }


Models - Urun.cs ye ekle

public List<Degerlendirme> Degerlendirmeler { get; set; }


Models - MagazaContext e ekle

public DbSet<Degerlendirme> Degerlendirmeler { get; set; }


Views - Urun - _DegerlendirmeYap partial view ekle

@model int

<div class="mb-4">
    <form method="post" asp-action="DegerlendirmeYap">
        <div class="mb-3">
            <textarea name="Yorum" id="Yorum" class="form-control"></textarea>
        </div>

        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="Puan" id="Puan1" value="1">
            <label class="form-check-label" for="Puan1">1</label>
        </div>
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="Puan" id="Puan2" value="2">
            <label class="form-check-label" for="Puan2">2</label>
        </div>
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="Puan" id="Puan3" value="3" checked>
            <label class="form-check-label" for="Puan3">3</label>
        </div>
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="Puan" id="Puan3" value="4">
            <label class="form-check-label" for="Puan3">4</label>
        </div>
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="Puan" id="Puan3" value="5">
            <label class="form-check-label" for="Puan3">5</label>
        </div>
        <div class="mt-2">
            <input type="hidden" name="UrunId" id="UrunId" value="@Model">
            <button type="submit" class="btn btn-primary">Tamam</button>
        </div>

    </form>
</div>


Views - Urun - Detay.cshtml partial çağır

<h4 class="mb-2">Ürün Değerlendirmeleri</h4>
@if (User.Identity.IsAuthenticated)
{
    @if (TempData["Mesaj"] != null)
    {
        <div class="alert alert-success">@TempData["Mesaj"]</div>
    }
    <partial name="_DegerlendirmeYap" model="@Model.Id"></partial>
}
else
{
    <div class="alert alert-danger">Sadece kayıtlı kullanıcılar değerlendirme yapabilir</div>
}


UrunController - DegerlendirmeYap action ekle

[Authorize]
[HttpPost]
public IActionResult DegerlendirmeYap(int UrunId, string Yorum, int Puan)
{
    Degerlendirme model = new Degerlendirme()
    {
        KullaniciId = User.FindFirstValue(ClaimTypes.NameIdentifier),
        UrunId = UrunId,
        Yorum = Yorum,
        Puan = Puan,
        EklenmeTarihi = DateTime.Now,
        Onay = false
    };

    if (User.IsInRole("Admin"))
    {
        model.Onay = true;
    }

    context.Degerlendirmeler.Add(model);
    context.SaveChanges();
    TempData["Mesaj"] = "Değerlendirmeniz için teşekkürler!";
    return RedirectToAction("Detay", new { id = UrunId });
}



***************************
DEĞERLENDİRMELERİ LİSTELE
***************************

ViewModels - UrunDetayViewModel.cs oluştur

public class UrunDetayViewModel
{
    public Urun Urun { get; set; }
    public List<Degerlendirme> Degerlendirmeler { get; set; }
}



UrunController - Detay action ı değiştir

public IActionResult Detay(int id)
{
    Urun urun = context.Urunler.FirstOrDefault(x => x.Id == id);
    List<Degerlendirme> degerlendirmeler = context.Degerlendirmeler.Where(x => x.UrunId == id && x.Onay == true).Include("Kullanici").OrderByDescending(x => x.EklenmeTarihi).ToList();
    UrunDetayViewModel viewModel = new UrunDetayViewModel()
    {
        Urun = urun,
        Degerlendirmeler = degerlendirmeler
    };
    return View(viewModel);
}



Views - Urun - Detay.cshtml model tipi değiştir

@model UrunDetayViewModel

Model.Id -> Model.Urun.Id, Model.UrunAdi - Model.Urun.UrunAdi vs. değiştir


@if (Model.Degerlendirmeler.Count == 0)
{
    <div class="alert alert-danger">Henüz değerlendirme yapılmamıştır</div>
}
else
{
    <div class="alert alert-success">@Model.Degerlendirmeler.Count değerlendirme</div>
}
@foreach (var item in Model.Degerlendirmeler)
{
    <div class="card mb-2 small">
        <div class="card-body">
            <h5 class="card-title">@item.Kullanici.UserName</h5>
            <h6 class="card-subtitle text-muted mb-2">@item.EklenmeTarihi.GecenZaman()</h6>
            <div class="text-warning">
                @for (int i = 0; i < item.Puan; i++)
                {
                    <i class="bi bi-star-fill"></i>
                }
                @for (int i = 0; i < 5 - item.Puan; i++)
                {
                    <i class="bi bi-star"></i>
                }
            </div>
            <div class="card-text">@item.Yorum</div>
        </div>
    </div>
}



***************************
ADMIN DEĞERLENDİRME ONAY
***************************

Views - Admin - Urun.cshtml ye ekle

<a asp-action="Degerlendirme" asp-route-id="@item.Id" class="btn btn-outline-primary">Değerlendirmeler</a>


AdminController Degerlendirme action hazırla

public IActionResult Degerlendirme(int id)
{
    Urun kayit = context.Urunler.FirstOrDefault(x => x.Id == id);
    ViewBag.UrunAdi = kayit.UrunAdi;
    return View(context.Degerlendirmeler.Where(x => x.UrunId == id).ToList());
}


Views - Admin - Degerlendirme.cshtml hazırla

@model List<Degerlendirme>

<div class="container mt-4">
    <div class="mb-3">
        <h2>@ViewBag.UrunAdi İçin Değerlendirmeler</h2>

        <!-- Urun Listesi -->
        <table class="table table-striped align-middle">
            <thead>
                <tr>
                    <th>Yorum</th>
                    <th>Puan</th>
                    <th>Tarih</th>
                    <th>İşlem</th>
                </tr>
            </thead>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Yorum</td>
                    <td>@item.Puan</td>
                    <td>@item.EklenmeTarihi.KisaTarih()</td>
                    <td>
                        <a asp-action="DegerlendirmeSil" asp-route-id="@item.Id" class="btn btn-outline-primary">Sil</a>
                        @if (@item.Onay)
                        {
                            <a asp-action="DegerlendirmeOnay" asp-route-id="@item.Id" class="btn btn-outline-danger">Onayı
                                Kaldır</a>
                        }
                        else
                        {
                            <a asp-action="DegerlendirmeOnay" asp-route-id="@item.Id" class="btn btn-outline-success">Onayla</a>
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
</div>


AdminController DegerlendirmeOnay ve DegerlendirmeSil action hazırla

public IActionResult DegerlendirmeOnay(int id)
{
    Degerlendirme kayit = context.Degerlendirmeler.FirstOrDefault(x => x.Id == id);
    kayit.Onay = !kayit.Onay;
    context.Degerlendirmeler.Update(kayit);
    context.SaveChanges();
    return RedirectToAction("Degerlendirme", new { id = kayit.UrunId });
}

public IActionResult DegerlendirmeSil(int id)
{
    Degerlendirme kayit = context.Degerlendirmeler.FirstOrDefault(x => x.Id == id);
    int urunId = kayit.UrunId;
    context.Degerlendirmeler.Remove(kayit);
    context.SaveChanges();
    return RedirectToAction("Degerlendirme", new { id = urunId });
}




***************************
ÜRÜN ORTALAMA PUANI
***************************


UrunDetayViewModel e ekle

public double OrtalamaPuan { get; set; }


UrunController Detay action düzenle

double ortalamaPuan = 0;
if (degerlendirmeler.Count > 0)
{
    ortalamaPuan = degerlendirmeler.Select(x => x.Puan).Average();
}

UrunDetayViewModel viewModel = new UrunDetayViewModel()
{
    Urun = urun,
    Degerlendirmeler = degerlendirmeler,
    OrtalamaPuan = ortalamaPuan
};


Views - Urun - Detay ekle

<p>
    @{
        string yuzde = (Model.OrtalamaPuan * 100 / 5).ToString("#");
    }
    @if (Model.Degerlendirmeler.Count > 0)
    {
    <div class="text-secondary d-flex flex-nowrap" id="puanlama-arka">
        <i class="bi bi-star-fill"></i>
        <i class="bi bi-star-fill"></i>
        <i class="bi bi-star-fill"></i>
        <i class="bi bi-star-fill"></i>
        <i class="bi bi-star-fill"></i>
        <div class="text-warning d-flex flex-nowrap" id="puanlama-on" style="width:@yuzde%;">
            <i class="bi bi-star-fill"></i>
            <i class="bi bi-star-fill"></i>
            <i class="bi bi-star-fill"></i>
            <i class="bi bi-star-fill"></i>
            <i class="bi bi-star-fill"></i>
        </div>
    </div>
    <h5>
            @Model.OrtalamaPuan.ToString("#.#") / 5
        <span class="text-muted small">(@Model.Degerlendirmeler.Count değerlendirme)</span>
    </h5>
    }
</p>

<style>
    #puanlama-arka {
        position: relative;
        font-size: 21px;
        width: 125px;
    }

    #puanlama-on {
        position: absolute;
        left: 0;
        top: 0;
        overflow: hidden;
    }

    #puanlama-arka i {
        margin: 0 2px 0 2px;
    }
</style>