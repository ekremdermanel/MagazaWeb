ViewModels - AramaViewModel.cs ekle

public class AramaViewModel
{
    public List<Urun> Urunler { get; set; }
    public List<Kategori> Kategoriler { get; set; }
}


Views - Shared - _Arama.cshtml

<form asp-controller="Home" asp-action="Arama" method="get">
input name="p" value='@(Context.Request.Query["p"])'
button type="submit"


HomeController.cs

public IActionResult Arama(string p)
{
    ViewBag.ListeBasligi = p + " ile ilgili arama sonuçları";
    AramaViewModel viewModel = new AramaViewModel();
    viewModel.Urunler = context.Urunler.Where(x => x.UrunAdi.Contains(p)).ToList();
    viewModel.Kategoriler = context.Kategoriler.Where(x => x.KategoriAdi.Contains(p)).ToList();
    return View(viewModel);
}

Views - Home - Arama.cshtml ekle
AramaViewModel ile gönderilen ürün ve kategori listelerini ayrı ayrı göster

@model AramaViewModel



<h2>@ViewBag.ListeBasligi</h2>

<h4 class="mt-3">Ürünler</h3>
@if (Model.Urunler.Count == 0)
{
    <div class="alert alert-danger small" role="alert">
        Kayıt bulunamadı
    </div>
}
else
{
    <div class="alert alert-success small" role="alert">
        @Model.Urunler.Count kayıt listeleniyor
    </div>
}
<!-- Urun Listesi -->
<div>
    @foreach (var item in Model.Urunler)
    {
        <p><a asp-controller="Urun" asp-action="Detay" asp-route-id="@item.Id">@item.UrunAdi</a></p>
    }
</div>

<h4 class="mt-2">Kategoriler</h4>
@if (Model.Kategoriler.Count == 0)
{
    <div class="alert alert-danger small" role="alert">
        Kayıt bulunamadı
    </div>
}
else
{
    <div class="alert alert-success small" role="alert">
        @Model.Kategoriler.Count kayıt listeleniyor
    </div>
}
<!-- Kategori Listesi -->
<div>
    @foreach (var item in Model.Kategoriler)
    {
        <p><a asp-controller="Urun" asp-action="Index" asp-route-id="@item.Id">@item.KategoriAdi</a></p>
    }
</div>